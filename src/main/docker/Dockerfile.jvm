FROM ghcr.io/graalvm/native-image:ol8-java17-22 AS build
# FROM container-registry.oracle.com/graalvm/native-image:17 AS build

WORKDIR /build
COPY mvnw /build/
COPY .mvn /build/.mvn
COPY pom.xml /build/
COPY src /build/src

# Build
# RUN export MAVEN_OPTS="-Xmx20480m"
RUN chmod 777 mvnw
RUN ./mvnw native:compile -Pnative -DskipTests=true

# The deployment Image
FROM docker.io/alpine
EXPOSE 8080
# Copy the native executable into the containers
COPY --from=build /build/target/springnative .
ENTRYPOINT ["/springnative"]

FROM quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21 AS build
COPY --chown=quarkus:quarkus mvnw /code/
COPY --chown=quarkus:quarkus .mvn /code/.mvn
COPY --chown=quarkus:quarkus pom.xml /code/

USER quarkus
WORKDIR /code
RUN ./mvnw -B org.apache.maven.plugins:maven-dependency-plugin:3.1.2:go-offline
COPY src /code/src
RUN ./mvnw clean package -DskipTests=true

## Stage 2 : create the docker final image
FROM registry.access.redhat.com/ubi8/openjdk-17:1.17

ENV LANGUAGE='en_US:en'

COPY --chown=185 target/*.jar /deployments/

EXPOSE 8080
USER 185
ENV JAVA_APP_JAR="/deployments/spring-jvm-postgres-0.0.1-SNAPSHOT.jar"

ENTRYPOINT [ "/opt/jboss/container/java/run/run-java.sh" ]
